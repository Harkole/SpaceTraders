@inject ApiService _apiService;
@inject NavigationManager _navManager;

@if (null != Ships)
{

    <h3>Available Ship(s)</h3>
    <table class="table table-light table-striped text-center">
        <thead>
            <tr>
                <th scope="col">@nameof(ShipDto.FlightPlanId)</th>
                <th scope="col">@nameof(ShipDto.Manufacturer)</th>
                <th scope="col">@nameof(ShipDto.Class)</th>
                <th scope="col">@nameof(ShipDto.Type)</th>
                <th scope="col">@nameof(ShipDto.Location)</th>
                <th scope="col">@nameof(ShipDto.MaxCargo)</th>
                <th scope="col">@nameof(ShipDto.SpaceAvailable)</th>
                <th scope="col">@nameof(ShipDto.Speed)</th>
                <th scope="col">@nameof(ShipDto.Plating)</th>
                <th scope="col">@nameof(ShipDto.Weapons)</th>
                <th scope="col">Co-Ordinates</th>
            </tr>
        </thead>
        <tbody>

            @foreach (ShipDto ship in Ships)
            {
                <tr>
                    @if(string.IsNullOrEmpty(ship.FlightPlanId))
                    {
                        <td><button type="button" class="btn btn-secondary btn-sm" @onclick="(() => CreateFlightPlan(ship.Id))"><i class="fas fa-rocket"></i><i class="fas fa-plus"></i></button></td>
                    }
                    else
                    {
                        <td><button type="button" class="btn btn-secondary btn-sm" @onclick="(() => ViewFlightPlan(ship.FlightPlanId))"><i class="fa-regular fa-eye"></i></button></td>
                    }
                    <td>@ship.Manufacturer</td>
                    <td>@ship.Class</td>
                    <td>@ship.Type</td>
                    <td>
                        @if (!string.IsNullOrEmpty(ship.Location))
                        {
                            <button title="View Market" class="btn btn-secondary btn-sm" @onclick="(() => ViewMarketplace(ship.Location, ship.Id))"><i class="fa-solid fa-shop"></i>&nbsp;@ship.Location</button>
                        }
                        else
                        {
                            @("In Flight")
                        }
                    </td>
                    <td>@ship.MaxCargo</td>
                    <td>@ship.SpaceAvailable</td>
                    <td>@ship.Speed</td>
                    <td>@ship.Plating</td>
                    <td>@ship.Weapons</td>
                    <td>X: @ship.X Y: @ship.Y</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<ShipDto>? Ships;

    protected override async Task OnInitializedAsync()
    {
        ShipsDto? ships = await _apiService.Get<ShipsDto>("my/ships");

        if (null != ships)
        {
            Ships = ships.Ships;
        }
    }

    private void CreateFlightPlan(string shipId)
    => _navManager.NavigateTo($"/createflightplan/{shipId}");

    private void ViewFlightPlan(string flightPlanId)
    => _navManager.NavigateTo($"/viewFlightPlan/{flightPlanId}");

    private void ViewMarketplace(string locationSymbol, string shipId)
    => _navManager.NavigateTo($"/marketplace/{locationSymbol}/{shipId}");
}
